/**
 * Start version
 */
def versions = [:]
versions.gradle = '7.2.0'
versions.navSafeArgs = '2.4.1'
versions.firebaseAppDistGradle = '2.2.0'
versions.playServicesGradle = "4.3.8"
versions.firebaseCrashlyticsGradle = '2.8.1'

/**
 *
 * AndroidX
 */
versions.appCompat = "1.2.0"
versions.coreKtx = '1.3.2'
versions.constraint = '2.0.4'
versions.coordinator = "1.1.0"
versions.navigation = '2.3.2'
versions.multidex = "2.0.1"
versions.fragment = "1.2.5"
versions.room = '2.2.6'
versions.exifInterface = '1.3.2'

//Arch component
versions.lifecycle = "2.2.0"

//Kotlin
versions.kotlin = '1.5.0'
versions.coroutinesCore = "1.3.9"

//Media
versions.glide = "4.11.0"

//Networks
versions.retrofit = "2.6.4"
versions.okhttp = '3.12.1'

//DI
versions.javaxAnnotation = "1.0"
versions.javaxInject = "1"
versions.dagger = '2.30.1'
versions.hilt = '2.40.1'
versions.hiltNavigation = "1.0.0"
versions.hiltLifecycle = "1.0.0-alpha03"
versions.glassFishAnnotation = "10.0-b28"

//Testing
versions.jUnit = '4.13.2'
versions.extjUnit = "1.1.3"
versions.espresso = "3.4.0"
versions.archComponent = "2.1.0"

//Google's
versions.gson = "2.8.7"
versions.material = '1.2.1'
versions.location = '17.1.0'
versions.googlemaps = '17.0.0'
versions.place = '2.4.0'
versions.googleCore = '1.10.2'

//picker image
versions.yalantis = "2.2.6"
versions.exifinterface = "1.3.3"

//document file
versions.documentfile = "1.0.1"

//swiperefreshlayout
versions.swiperefresh = "1.1.0"

ext.versions = versions

def build_version = [:]
build_version.minSdk = 21
build_version.targetSdk = 32
build_version.compileSdk = 32
build_version.buildTools = '30.0.2'
build_version.versionCode = 1
build_version.versionName = "1.0"

ext.build_version = build_version

/**
 * Start classpath
 */
def classpaths = [:]

classpaths.kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
classpaths.gradle = "com.android.tools.build:gradle:${versions.gradle}"
classpaths.navSafeArgs = "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.navSafeArgs}"
classpaths.hilt = "com.google.dagger:hilt-android-gradle-plugin:${versions.hilt}"

ext.classpaths = classpaths

/**
 * Start Deps as dependencies collection
 * Start commons AndroidX dependencies
 */
def deps = [:]

def androidx = [:]
androidx.appCompat = "androidx.appcompat:appcompat:${versions.appCompat}"
androidx.coreKtx = "androidx.core:core-ktx:${versions.coreKtx}"
androidx.constraintLayout = "androidx.constraintlayout:constraintlayout:${versions.constraint}"
androidx.constraintLayoutSolver = "androidx.constraintlayout:constraintlayout-solver:${versions.constraint}"
androidx.coordinatorLayout = "androidx.coordinatorlayout:coordinatorlayout:${versions.coordinator}"
androidx.navigationUI = "androidx.navigation:navigation-ui-ktx:${versions.navigation}"
androidx.navigationFragment = "androidx.navigation:navigation-fragment-ktx:${versions.navigation}"
androidx.multidex = "androidx.multidex:multidex:${versions.multidex}"
androidx.fragment = "androidx.fragment:fragment-ktx:${versions.fragment}"
androidx.exifInterface = "androidx.exifinterface:exifinterface:${versions.exifInterface}"

deps.androidx = androidx

/**
 * Start kotlin dependencies
 */
def kotlin = [:]
kotlin.kotlin = "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
kotlin.coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutinesCore}"
kotlin.coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutinesCore}"

deps.kotlin = kotlin

/**
 * Start lifecycle dependencies
 */
def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:${versions.lifecycle}"
lifecycle.extentions = "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
lifecycle.viewModel = "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
lifecycle.liveData = "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
lifecycle.savedState = "androidx.lifecycle:lifecycle-viewmodel-savedstate:${versions.lifecycle}"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:${versions.lifecycle}"
lifecycle.commonJava8 = "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"
lifecycle.reactiveStreams = "androidx.lifecycle:lifecycle-reactivestreams-ktx:${versions.lifecycle}"
lifecycle.services = "androidx.lifecycle:lifecycle-service:${versions.lifecycle}"

deps.lifecycle = lifecycle

/**
 * Start google dependencies
 */
def googles = [:]
googles.gson = "com.google.code.gson:gson:${versions.gson}"
googles.material = "com.google.android.material:material:${versions.material}"
googles.mapsService = "com.google.android.gms:play-services-maps:${versions.googlemaps}"
googles.locationService = "com.google.android.gms:play-services-location:${versions.location}"
googles.place = "com.google.android.libraries.places:places:${versions.place}"
googles.core = "com.google.android.play:core:${versions.googleCore}"

deps.google = googles

/**
 * Start glide dependencies
 */
def glide = [:]
glide.glide = "com.github.bumptech.glide:glide:${versions.glide}"
glide.compiler = "com.github.bumptech.glide:compiler:${versions.glide}"

deps.glide = glide

/**
 * Start injections and javax dependencies
 */
def injections = [:]

injections.hilt = "com.google.dagger:hilt-android:${versions.hilt}"
injections.hiltCompiler = "com.google.dagger:hilt-compiler:${versions.hilt}"
injections.hiltLifecycle = "androidx.hilt:hilt-lifecycle-viewmodel:${versions.hiltLifecycle}"

deps.injections = injections

/**
 * Start networking dependencies
 */
def network = [:]
network.retrofit = "com.squareup.retrofit2:retrofit:${versions.retrofit}"
network.retrofitConverter = "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
network.okhttp = "com.squareup.okhttp3:okhttp:${versions.okhttp}"
network.okhttpLogger = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

deps.network = network

/**
 * Start room dependencies
 */
def room = [:]
room.runtime = "androidx.room:room-runtime:${versions.room}"
room.compiler = "androidx.room:room-compiler:${versions.room}"
room.ktx = "androidx.room:room-ktx:${versions.room}"
room.rxJava = "androidx.room:room-rxjava2:${versions.room}"

deps.room = room

/*yalantis*/
def yalantis = [:]
yalantis.ucrop = "com.github.yalantis:ucrop:${versions.yalantis}"
deps.yalantis = yalantis

def document = [:]
document.documentfile = "androidx.documentfile:documentfile:${versions.documentfile}"
deps.document = document

def list = [:]
list.swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:${versions.swiperefresh}"
deps.list = list

def exifinterface = [:]
exifinterface.exifi = "androidx.exifinterface:exifinterface:${versions.exifinterface}"
deps.exifinterface = exifinterface

/**
 * Start testing dependencies
 */
def testing = [:]
testing.jUnit = "junit:junit:${versions.jUnit}"
testing.extjUnit = "androidx.test.ext:junit:${versions.extjUnit}"
testing.kotlinjUnit = "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}"
testing.espressoCore = "androidx.test.espresso:espresso-core:${versions.espresso}"
testing.espressoIntent = "androidx.test.espresso:espresso-intents:${versions.espresso}"
testing.espressoContrib = "androidx.test.espresso:espresso-contrib:${versions.espresso}"
testing.archComponent = "androidx.arch.core:core-testing:${versions.archComponent}"
testing.room = "androidx.room:room-testing:${versions.room}"

deps.testing = testing

ext.deps = deps
